#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PASS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database")]
	public partial class LinqToSqlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBill(Bill instance);
    partial void UpdateBill(Bill instance);
    partial void DeleteBill(Bill instance);
    partial void InsertVat(Vat instance);
    partial void UpdateVat(Vat instance);
    partial void DeleteVat(Vat instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertImagesTable(ImagesTable instance);
    partial void UpdateImagesTable(ImagesTable instance);
    partial void DeleteImagesTable(ImagesTable instance);
    partial void InsertProductImage(ProductImage instance);
    partial void UpdateProductImage(ProductImage instance);
    partial void DeleteProductImage(ProductImage instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertUnit(Unit instance);
    partial void UpdateUnit(Unit instance);
    partial void DeleteUnit(Unit instance);
    partial void InsertUserRole(UserRole instance);
    partial void UpdateUserRole(UserRole instance);
    partial void DeleteUserRole(UserRole instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertOrderItem(OrderItem instance);
    partial void UpdateOrderItem(OrderItem instance);
    partial void DeleteOrderItem(OrderItem instance);
    partial void InsertOrderItemsVat(OrderItemsVat instance);
    partial void UpdateOrderItemsVat(OrderItemsVat instance);
    partial void DeleteOrderItemsVat(OrderItemsVat instance);
    #endregion
		
		public LinqToSqlDataContext() : 
				base(global::PASS.Properties.Settings.Default.DatabaseConnectionString3, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Bill> Bills
		{
			get
			{
				return this.GetTable<Bill>();
			}
		}
		
		public System.Data.Linq.Table<Vat> Vats
		{
			get
			{
				return this.GetTable<Vat>();
			}
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<ImagesTable> ImagesTables
		{
			get
			{
				return this.GetTable<ImagesTable>();
			}
		}
		
		public System.Data.Linq.Table<ProductImage> ProductImages
		{
			get
			{
				return this.GetTable<ProductImage>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Unit> Units
		{
			get
			{
				return this.GetTable<Unit>();
			}
		}
		
		public System.Data.Linq.Table<UserRole> UserRoles
		{
			get
			{
				return this.GetTable<UserRole>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<OrderItem> OrderItems
		{
			get
			{
				return this.GetTable<OrderItem>();
			}
		}
		
		public System.Data.Linq.Table<OrderItemsVat> OrderItemsVats
		{
			get
			{
				return this.GetTable<OrderItemsVat>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bill")]
	public partial class Bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _billText;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnbillTextChanging(string value);
    partial void OnbillTextChanged();
    #endregion
		
		public Bill()
		{
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billText", DbType="NVarChar(200)")]
		public string billText
		{
			get
			{
				return this._billText;
			}
			set
			{
				if ((this._billText != value))
				{
					this.OnbillTextChanging(value);
					this.SendPropertyChanging();
					this._billText = value;
					this.SendPropertyChanged("billText");
					this.OnbillTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Bill", Storage="_Company", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Bill = null;
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Bill = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vat")]
	public partial class Vat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private char _id;
		
		private int _rate;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(char value);
    partial void OnidChanged();
    partial void OnrateChanging(int value);
    partial void OnrateChanged();
    #endregion
		
		public Vat()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NChar(1) NOT NULL", IsPrimaryKey=true)]
		public char id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rate", DbType="Int NOT NULL")]
		public int rate
		{
			get
			{
				return this._rate;
			}
			set
			{
				if ((this._rate != value))
				{
					this.OnrateChanging(value);
					this.SendPropertyChanging();
					this._rate = value;
					this.SendPropertyChanged("rate");
					this.OnrateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vat_Product", Storage="_Products", ThisKey="id", OtherKey="vatId")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Vat = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Vat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _adress;
		
		private string _city;
		
		private System.Nullable<int> _postalCode;
		
		private string _phone;
		
		private string _web;
		
		private EntityRef<Bill> _Bill;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnadressChanging(string value);
    partial void OnadressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnpostalCodeChanging(System.Nullable<int> value);
    partial void OnpostalCodeChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnwebChanging(string value);
    partial void OnwebChanged();
    #endregion
		
		public Company()
		{
			this._Bill = default(EntityRef<Bill>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adress", DbType="NChar(100)")]
		public string adress
		{
			get
			{
				return this._adress;
			}
			set
			{
				if ((this._adress != value))
				{
					this.OnadressChanging(value);
					this.SendPropertyChanging();
					this._adress = value;
					this.SendPropertyChanged("adress");
					this.OnadressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NChar(100)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalCode", DbType="Int")]
		public System.Nullable<int> postalCode
		{
			get
			{
				return this._postalCode;
			}
			set
			{
				if ((this._postalCode != value))
				{
					this.OnpostalCodeChanging(value);
					this.SendPropertyChanging();
					this._postalCode = value;
					this.SendPropertyChanged("postalCode");
					this.OnpostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NChar(20)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_web", DbType="NChar(100)")]
		public string web
		{
			get
			{
				return this._web;
			}
			set
			{
				if ((this._web != value))
				{
					this.OnwebChanging(value);
					this.SendPropertyChanging();
					this._web = value;
					this.SendPropertyChanged("web");
					this.OnwebChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Bill", Storage="_Bill", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Bill Bill
		{
			get
			{
				return this._Bill.Entity;
			}
			set
			{
				Bill previousValue = this._Bill.Entity;
				if (((previousValue != value) 
							|| (this._Bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bill.Entity = null;
						previousValue.Company = null;
					}
					this._Bill.Entity = value;
					if ((value != null))
					{
						value.Company = this;
					}
					this.SendPropertyChanged("Bill");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImagesTable")]
	public partial class ImagesTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Data.Linq.Binary _img;
		
		private EntitySet<ProductImage> _ProductImages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnimgChanging(System.Data.Linq.Binary value);
    partial void OnimgChanged();
    #endregion
		
		public ImagesTable()
		{
			this._ProductImages = new EntitySet<ProductImage>(new Action<ProductImage>(this.attach_ProductImages), new Action<ProductImage>(this.detach_ProductImages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary img
		{
			get
			{
				return this._img;
			}
			set
			{
				if ((this._img != value))
				{
					this.OnimgChanging(value);
					this.SendPropertyChanging();
					this._img = value;
					this.SendPropertyChanged("img");
					this.OnimgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ImagesTable_ProductImage", Storage="_ProductImages", ThisKey="id", OtherKey="idImage")]
		public EntitySet<ProductImage> ProductImages
		{
			get
			{
				return this._ProductImages;
			}
			set
			{
				this._ProductImages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductImages(ProductImage entity)
		{
			this.SendPropertyChanging();
			entity.ImagesTable = this;
		}
		
		private void detach_ProductImages(ProductImage entity)
		{
			this.SendPropertyChanging();
			entity.ImagesTable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductImages")]
	public partial class ProductImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _idProduct;
		
		private System.Nullable<int> _idImage;
		
		private EntityRef<ImagesTable> _ImagesTable;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidProductChanging(System.Nullable<int> value);
    partial void OnidProductChanged();
    partial void OnidImageChanging(System.Nullable<int> value);
    partial void OnidImageChanged();
    #endregion
		
		public ProductImage()
		{
			this._ImagesTable = default(EntityRef<ImagesTable>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProduct", DbType="Int")]
		public System.Nullable<int> idProduct
		{
			get
			{
				return this._idProduct;
			}
			set
			{
				if ((this._idProduct != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProductChanging(value);
					this.SendPropertyChanging();
					this._idProduct = value;
					this.SendPropertyChanged("idProduct");
					this.OnidProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idImage", DbType="Int")]
		public System.Nullable<int> idImage
		{
			get
			{
				return this._idImage;
			}
			set
			{
				if ((this._idImage != value))
				{
					if (this._ImagesTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidImageChanging(value);
					this.SendPropertyChanging();
					this._idImage = value;
					this.SendPropertyChanged("idImage");
					this.OnidImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ImagesTable_ProductImage", Storage="_ImagesTable", ThisKey="idImage", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public ImagesTable ImagesTable
		{
			get
			{
				return this._ImagesTable.Entity;
			}
			set
			{
				ImagesTable previousValue = this._ImagesTable.Entity;
				if (((previousValue != value) 
							|| (this._ImagesTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ImagesTable.Entity = null;
						previousValue.ProductImages.Remove(this);
					}
					this._ImagesTable.Entity = value;
					if ((value != null))
					{
						value.ProductImages.Add(this);
						this._idImage = value.id;
					}
					else
					{
						this._idImage = default(Nullable<int>);
					}
					this.SendPropertyChanged("ImagesTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductImage", Storage="_Product", ThisKey="idProduct", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductImages.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductImages.Add(this);
						this._idProduct = value.id;
					}
					else
					{
						this._idProduct = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _quantity;
		
		private System.Nullable<int> _unit;
		
		private System.Nullable<decimal> _unitQuantity;
		
		private System.Nullable<System.DateTime> _expirationDate;
		
		private int _code;
		
		private System.Nullable<decimal> _price;
		
		private bool _priceForUnit;
		
		private char _vatId;
		
		private EntitySet<ProductImage> _ProductImages;
		
		private EntityRef<Vat> _Vat;
		
		private EntityRef<Unit> _Unit1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OnunitChanging(System.Nullable<int> value);
    partial void OnunitChanged();
    partial void OnunitQuantityChanging(System.Nullable<decimal> value);
    partial void OnunitQuantityChanged();
    partial void OnexpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnexpirationDateChanged();
    partial void OncodeChanging(int value);
    partial void OncodeChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void OnpriceForUnitChanging(bool value);
    partial void OnpriceForUnitChanged();
    partial void OnvatIdChanging(char value);
    partial void OnvatIdChanged();
    #endregion
		
		public Product()
		{
			this._ProductImages = new EntitySet<ProductImage>(new Action<ProductImage>(this.attach_ProductImages), new Action<ProductImage>(this.detach_ProductImages));
			this._Vat = default(EntityRef<Vat>);
			this._Unit1 = default(EntityRef<Unit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unit", DbType="Int")]
		public System.Nullable<int> unit
		{
			get
			{
				return this._unit;
			}
			set
			{
				if ((this._unit != value))
				{
					if (this._Unit1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnunitChanging(value);
					this.SendPropertyChanging();
					this._unit = value;
					this.SendPropertyChanged("unit");
					this.OnunitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitQuantity", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> unitQuantity
		{
			get
			{
				return this._unitQuantity;
			}
			set
			{
				if ((this._unitQuantity != value))
				{
					this.OnunitQuantityChanging(value);
					this.SendPropertyChanging();
					this._unitQuantity = value;
					this.SendPropertyChanged("unitQuantity");
					this.OnunitQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expirationDate", DbType="Date")]
		public System.Nullable<System.DateTime> expirationDate
		{
			get
			{
				return this._expirationDate;
			}
			set
			{
				if ((this._expirationDate != value))
				{
					this.OnexpirationDateChanging(value);
					this.SendPropertyChanging();
					this._expirationDate = value;
					this.SendPropertyChanged("expirationDate");
					this.OnexpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="Int NOT NULL")]
		public int code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priceForUnit", DbType="Bit NOT NULL")]
		public bool priceForUnit
		{
			get
			{
				return this._priceForUnit;
			}
			set
			{
				if ((this._priceForUnit != value))
				{
					this.OnpriceForUnitChanging(value);
					this.SendPropertyChanging();
					this._priceForUnit = value;
					this.SendPropertyChanged("priceForUnit");
					this.OnpriceForUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vatId", DbType="NChar(1) NOT NULL")]
		public char vatId
		{
			get
			{
				return this._vatId;
			}
			set
			{
				if ((this._vatId != value))
				{
					if (this._Vat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnvatIdChanging(value);
					this.SendPropertyChanging();
					this._vatId = value;
					this.SendPropertyChanged("vatId");
					this.OnvatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductImage", Storage="_ProductImages", ThisKey="id", OtherKey="idProduct")]
		public EntitySet<ProductImage> ProductImages
		{
			get
			{
				return this._ProductImages;
			}
			set
			{
				this._ProductImages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vat_Product", Storage="_Vat", ThisKey="vatId", OtherKey="id", IsForeignKey=true)]
		public Vat Vat
		{
			get
			{
				return this._Vat.Entity;
			}
			set
			{
				Vat previousValue = this._Vat.Entity;
				if (((previousValue != value) 
							|| (this._Vat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vat.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Vat.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._vatId = value.id;
					}
					else
					{
						this._vatId = default(char);
					}
					this.SendPropertyChanged("Vat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_Product", Storage="_Unit1", ThisKey="unit", OtherKey="id", IsForeignKey=true)]
		public Unit Unit1
		{
			get
			{
				return this._Unit1.Entity;
			}
			set
			{
				Unit previousValue = this._Unit1.Entity;
				if (((previousValue != value) 
							|| (this._Unit1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unit1.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Unit1.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._unit = value.id;
					}
					else
					{
						this._unit = default(Nullable<int>);
					}
					this.SendPropertyChanged("Unit1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductImages(ProductImage entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductImages(ProductImage entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Units")]
	public partial class Unit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Unit()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(40) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_Product", Storage="_Products", ThisKey="id", OtherKey="unit")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Unit1 = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Unit1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRoles")]
	public partial class UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public UserRole()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(40) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRole_User", Storage="_Users", ThisKey="id", OtherKey="userRole")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.UserRole1 = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.UserRole1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private string _pswd;
		
		private string _salt;
		
		private int _userRole;
		
		private EntityRef<UserRole> _UserRole1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpswdChanging(string value);
    partial void OnpswdChanged();
    partial void OnsaltChanging(string value);
    partial void OnsaltChanged();
    partial void OnuserRoleChanging(int value);
    partial void OnuserRoleChanged();
    #endregion
		
		public User()
		{
			this._UserRole1 = default(EntityRef<UserRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NChar(40) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pswd", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string pswd
		{
			get
			{
				return this._pswd;
			}
			set
			{
				if ((this._pswd != value))
				{
					this.OnpswdChanging(value);
					this.SendPropertyChanging();
					this._pswd = value;
					this.SendPropertyChanged("pswd");
					this.OnpswdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salt", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string salt
		{
			get
			{
				return this._salt;
			}
			set
			{
				if ((this._salt != value))
				{
					this.OnsaltChanging(value);
					this.SendPropertyChanging();
					this._salt = value;
					this.SendPropertyChanged("salt");
					this.OnsaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userRole", DbType="Int NOT NULL")]
		public int userRole
		{
			get
			{
				return this._userRole;
			}
			set
			{
				if ((this._userRole != value))
				{
					if (this._UserRole1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserRoleChanging(value);
					this.SendPropertyChanging();
					this._userRole = value;
					this.SendPropertyChanged("userRole");
					this.OnuserRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRole_User", Storage="_UserRole1", ThisKey="userRole", OtherKey="id", IsForeignKey=true)]
		public UserRole UserRole1
		{
			get
			{
				return this._UserRole1.Entity;
			}
			set
			{
				UserRole previousValue = this._UserRole1.Entity;
				if (((previousValue != value) 
							|| (this._UserRole1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserRole1.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._UserRole1.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._userRole = value.id;
					}
					else
					{
						this._userRole = default(int);
					}
					this.SendPropertyChanged("UserRole1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _paid;
		
		private string _staff;
		
		private System.Nullable<System.DateTime> _timeOfTransaction;
		
		private string _companyName;
		
		private string _companyAdress;
		
		private string _companyCity;
		
		private string _companyPostalCode;
		
		private string _companyPhone;
		
		private string _companyWeb;
		
		private string _billText;
		
		private System.Nullable<decimal> _vatSum;
		
		private System.Nullable<decimal> _vatSumSingle;
		
		private System.Nullable<decimal> _totalShoppingCartPrice;
		
		private System.Nullable<decimal> _change;
		
		private EntitySet<OrderItem> _OrderItems;
		
		private EntitySet<OrderItemsVat> _OrderItemsVats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnpaidChanging(System.Nullable<int> value);
    partial void OnpaidChanged();
    partial void OnstaffChanging(string value);
    partial void OnstaffChanged();
    partial void OntimeOfTransactionChanging(System.Nullable<System.DateTime> value);
    partial void OntimeOfTransactionChanged();
    partial void OncompanyNameChanging(string value);
    partial void OncompanyNameChanged();
    partial void OncompanyAdressChanging(string value);
    partial void OncompanyAdressChanged();
    partial void OncompanyCityChanging(string value);
    partial void OncompanyCityChanged();
    partial void OncompanyPostalCodeChanging(string value);
    partial void OncompanyPostalCodeChanged();
    partial void OncompanyPhoneChanging(string value);
    partial void OncompanyPhoneChanged();
    partial void OncompanyWebChanging(string value);
    partial void OncompanyWebChanged();
    partial void OnbillTextChanging(string value);
    partial void OnbillTextChanged();
    partial void OnvatSumChanging(System.Nullable<decimal> value);
    partial void OnvatSumChanged();
    partial void OnvatSumSingleChanging(System.Nullable<decimal> value);
    partial void OnvatSumSingleChanged();
    partial void OntotalShoppingCartPriceChanging(System.Nullable<decimal> value);
    partial void OntotalShoppingCartPriceChanged();
    partial void OnchangeChanging(System.Nullable<decimal> value);
    partial void OnchangeChanged();
    #endregion
		
		public Order()
		{
			this._OrderItems = new EntitySet<OrderItem>(new Action<OrderItem>(this.attach_OrderItems), new Action<OrderItem>(this.detach_OrderItems));
			this._OrderItemsVats = new EntitySet<OrderItemsVat>(new Action<OrderItemsVat>(this.attach_OrderItemsVats), new Action<OrderItemsVat>(this.detach_OrderItemsVats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paid", DbType="Int")]
		public System.Nullable<int> paid
		{
			get
			{
				return this._paid;
			}
			set
			{
				if ((this._paid != value))
				{
					this.OnpaidChanging(value);
					this.SendPropertyChanging();
					this._paid = value;
					this.SendPropertyChanged("paid");
					this.OnpaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff", DbType="NChar(100)")]
		public string staff
		{
			get
			{
				return this._staff;
			}
			set
			{
				if ((this._staff != value))
				{
					this.OnstaffChanging(value);
					this.SendPropertyChanging();
					this._staff = value;
					this.SendPropertyChanged("staff");
					this.OnstaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeOfTransaction", DbType="DateTime")]
		public System.Nullable<System.DateTime> timeOfTransaction
		{
			get
			{
				return this._timeOfTransaction;
			}
			set
			{
				if ((this._timeOfTransaction != value))
				{
					this.OntimeOfTransactionChanging(value);
					this.SendPropertyChanging();
					this._timeOfTransaction = value;
					this.SendPropertyChanged("timeOfTransaction");
					this.OntimeOfTransactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyName", DbType="NChar(100)")]
		public string companyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				if ((this._companyName != value))
				{
					this.OncompanyNameChanging(value);
					this.SendPropertyChanging();
					this._companyName = value;
					this.SendPropertyChanged("companyName");
					this.OncompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyAdress", DbType="NChar(100)")]
		public string companyAdress
		{
			get
			{
				return this._companyAdress;
			}
			set
			{
				if ((this._companyAdress != value))
				{
					this.OncompanyAdressChanging(value);
					this.SendPropertyChanging();
					this._companyAdress = value;
					this.SendPropertyChanged("companyAdress");
					this.OncompanyAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyCity", DbType="NChar(100)")]
		public string companyCity
		{
			get
			{
				return this._companyCity;
			}
			set
			{
				if ((this._companyCity != value))
				{
					this.OncompanyCityChanging(value);
					this.SendPropertyChanging();
					this._companyCity = value;
					this.SendPropertyChanged("companyCity");
					this.OncompanyCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyPostalCode", DbType="NChar(100)")]
		public string companyPostalCode
		{
			get
			{
				return this._companyPostalCode;
			}
			set
			{
				if ((this._companyPostalCode != value))
				{
					this.OncompanyPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._companyPostalCode = value;
					this.SendPropertyChanged("companyPostalCode");
					this.OncompanyPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyPhone", DbType="NChar(100)")]
		public string companyPhone
		{
			get
			{
				return this._companyPhone;
			}
			set
			{
				if ((this._companyPhone != value))
				{
					this.OncompanyPhoneChanging(value);
					this.SendPropertyChanging();
					this._companyPhone = value;
					this.SendPropertyChanged("companyPhone");
					this.OncompanyPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyWeb", DbType="NChar(100)")]
		public string companyWeb
		{
			get
			{
				return this._companyWeb;
			}
			set
			{
				if ((this._companyWeb != value))
				{
					this.OncompanyWebChanging(value);
					this.SendPropertyChanging();
					this._companyWeb = value;
					this.SendPropertyChanged("companyWeb");
					this.OncompanyWebChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billText", DbType="NChar(100)")]
		public string billText
		{
			get
			{
				return this._billText;
			}
			set
			{
				if ((this._billText != value))
				{
					this.OnbillTextChanging(value);
					this.SendPropertyChanging();
					this._billText = value;
					this.SendPropertyChanged("billText");
					this.OnbillTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vatSum", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> vatSum
		{
			get
			{
				return this._vatSum;
			}
			set
			{
				if ((this._vatSum != value))
				{
					this.OnvatSumChanging(value);
					this.SendPropertyChanging();
					this._vatSum = value;
					this.SendPropertyChanged("vatSum");
					this.OnvatSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vatSumSingle", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> vatSumSingle
		{
			get
			{
				return this._vatSumSingle;
			}
			set
			{
				if ((this._vatSumSingle != value))
				{
					this.OnvatSumSingleChanging(value);
					this.SendPropertyChanging();
					this._vatSumSingle = value;
					this.SendPropertyChanged("vatSumSingle");
					this.OnvatSumSingleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalShoppingCartPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> totalShoppingCartPrice
		{
			get
			{
				return this._totalShoppingCartPrice;
			}
			set
			{
				if ((this._totalShoppingCartPrice != value))
				{
					this.OntotalShoppingCartPriceChanging(value);
					this.SendPropertyChanging();
					this._totalShoppingCartPrice = value;
					this.SendPropertyChanged("totalShoppingCartPrice");
					this.OntotalShoppingCartPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_change", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> change
		{
			get
			{
				return this._change;
			}
			set
			{
				if ((this._change != value))
				{
					this.OnchangeChanging(value);
					this.SendPropertyChanging();
					this._change = value;
					this.SendPropertyChanged("change");
					this.OnchangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderItem", Storage="_OrderItems", ThisKey="id", OtherKey="orderId")]
		public EntitySet<OrderItem> OrderItems
		{
			get
			{
				return this._OrderItems;
			}
			set
			{
				this._OrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderItemsVat", Storage="_OrderItemsVats", ThisKey="id", OtherKey="orderId")]
		public EntitySet<OrderItemsVat> OrderItemsVats
		{
			get
			{
				return this._OrderItemsVats;
			}
			set
			{
				this._OrderItemsVats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderItems(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderItems(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_OrderItemsVats(OrderItemsVat entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderItemsVats(OrderItemsVat entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderItems")]
	public partial class OrderItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _orderId;
		
		private string _name;
		
		private int _quantity;
		
		private string _unit;
		
		private System.Nullable<decimal> _unitQuantity;
		
		private System.Nullable<System.DateTime> _expirationDate;
		
		private int _code;
		
		private System.Nullable<decimal> _price;
		
		private bool _priceForUnit;
		
		private char _vatId;
		
		private System.Nullable<decimal> _totalPrice;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnorderIdChanging(int value);
    partial void OnorderIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OnunitChanging(string value);
    partial void OnunitChanged();
    partial void OnunitQuantityChanging(System.Nullable<decimal> value);
    partial void OnunitQuantityChanged();
    partial void OnexpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnexpirationDateChanged();
    partial void OncodeChanging(int value);
    partial void OncodeChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void OnpriceForUnitChanging(bool value);
    partial void OnpriceForUnitChanged();
    partial void OnvatIdChanging(char value);
    partial void OnvatIdChanged();
    partial void OntotalPriceChanging(System.Nullable<decimal> value);
    partial void OntotalPriceChanged();
    #endregion
		
		public OrderItem()
		{
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderId", DbType="Int NOT NULL")]
		public int orderId
		{
			get
			{
				return this._orderId;
			}
			set
			{
				if ((this._orderId != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnorderIdChanging(value);
					this.SendPropertyChanging();
					this._orderId = value;
					this.SendPropertyChanged("orderId");
					this.OnorderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unit", DbType="NChar(40)")]
		public string unit
		{
			get
			{
				return this._unit;
			}
			set
			{
				if ((this._unit != value))
				{
					this.OnunitChanging(value);
					this.SendPropertyChanging();
					this._unit = value;
					this.SendPropertyChanged("unit");
					this.OnunitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitQuantity", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> unitQuantity
		{
			get
			{
				return this._unitQuantity;
			}
			set
			{
				if ((this._unitQuantity != value))
				{
					this.OnunitQuantityChanging(value);
					this.SendPropertyChanging();
					this._unitQuantity = value;
					this.SendPropertyChanged("unitQuantity");
					this.OnunitQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expirationDate", DbType="Date")]
		public System.Nullable<System.DateTime> expirationDate
		{
			get
			{
				return this._expirationDate;
			}
			set
			{
				if ((this._expirationDate != value))
				{
					this.OnexpirationDateChanging(value);
					this.SendPropertyChanging();
					this._expirationDate = value;
					this.SendPropertyChanged("expirationDate");
					this.OnexpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="Int NOT NULL")]
		public int code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priceForUnit", DbType="Bit NOT NULL")]
		public bool priceForUnit
		{
			get
			{
				return this._priceForUnit;
			}
			set
			{
				if ((this._priceForUnit != value))
				{
					this.OnpriceForUnitChanging(value);
					this.SendPropertyChanging();
					this._priceForUnit = value;
					this.SendPropertyChanged("priceForUnit");
					this.OnpriceForUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vatId", DbType="NChar(1) NOT NULL")]
		public char vatId
		{
			get
			{
				return this._vatId;
			}
			set
			{
				if ((this._vatId != value))
				{
					this.OnvatIdChanging(value);
					this.SendPropertyChanging();
					this._vatId = value;
					this.SendPropertyChanged("vatId");
					this.OnvatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> totalPrice
		{
			get
			{
				return this._totalPrice;
			}
			set
			{
				if ((this._totalPrice != value))
				{
					this.OntotalPriceChanging(value);
					this.SendPropertyChanging();
					this._totalPrice = value;
					this.SendPropertyChanged("totalPrice");
					this.OntotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderItem", Storage="_Order", ThisKey="orderId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderItems.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderItems.Add(this);
						this._orderId = value.id;
					}
					else
					{
						this._orderId = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderItemsVat")]
	public partial class OrderItemsVat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _orderId;
		
		private char _vatId;
		
		private string _percentageLabel;
		
		private System.Nullable<decimal> _vatValue;
		
		private System.Nullable<decimal> _vatValueProducts;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnorderIdChanging(int value);
    partial void OnorderIdChanged();
    partial void OnvatIdChanging(char value);
    partial void OnvatIdChanged();
    partial void OnpercentageLabelChanging(string value);
    partial void OnpercentageLabelChanged();
    partial void OnvatValueChanging(System.Nullable<decimal> value);
    partial void OnvatValueChanged();
    partial void OnvatValueProductsChanging(System.Nullable<decimal> value);
    partial void OnvatValueProductsChanged();
    #endregion
		
		public OrderItemsVat()
		{
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int orderId
		{
			get
			{
				return this._orderId;
			}
			set
			{
				if ((this._orderId != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnorderIdChanging(value);
					this.SendPropertyChanging();
					this._orderId = value;
					this.SendPropertyChanged("orderId");
					this.OnorderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vatId", DbType="NChar(1) NOT NULL", IsPrimaryKey=true)]
		public char vatId
		{
			get
			{
				return this._vatId;
			}
			set
			{
				if ((this._vatId != value))
				{
					this.OnvatIdChanging(value);
					this.SendPropertyChanging();
					this._vatId = value;
					this.SendPropertyChanged("vatId");
					this.OnvatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_percentageLabel", DbType="NChar(100)")]
		public string percentageLabel
		{
			get
			{
				return this._percentageLabel;
			}
			set
			{
				if ((this._percentageLabel != value))
				{
					this.OnpercentageLabelChanging(value);
					this.SendPropertyChanging();
					this._percentageLabel = value;
					this.SendPropertyChanged("percentageLabel");
					this.OnpercentageLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vatValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> vatValue
		{
			get
			{
				return this._vatValue;
			}
			set
			{
				if ((this._vatValue != value))
				{
					this.OnvatValueChanging(value);
					this.SendPropertyChanging();
					this._vatValue = value;
					this.SendPropertyChanged("vatValue");
					this.OnvatValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vatValueProducts", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> vatValueProducts
		{
			get
			{
				return this._vatValueProducts;
			}
			set
			{
				if ((this._vatValueProducts != value))
				{
					this.OnvatValueProductsChanging(value);
					this.SendPropertyChanging();
					this._vatValueProducts = value;
					this.SendPropertyChanged("vatValueProducts");
					this.OnvatValueProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderItemsVat", Storage="_Order", ThisKey="orderId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderItemsVats.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderItemsVats.Add(this);
						this._orderId = value.id;
					}
					else
					{
						this._orderId = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
